Aggregation represents the Has-A relationship between classes. Java Aggregation allows only one-to-one relationships.
If an object is destroyed, it will not affect the other object, i.e., both objects can work independently.

Letâ€™s take an example. There is an Employee in a company who belongs to a particular Department. If the Employee object gets destroyed still the Department can work independently.

The end of the Employee object will not affect or destroy the Department object. The Aggregation is represented as a line with a diamond.

class Employee {
  int id;
  String name;
  String dept;
  Employee(int id, String name, String dept) {
    this.id = id;
    this.name = name;
    this.dept = dept;
    System.out.println("\nEmployee name is " + name);
    System.out.println("Employee Id is " + id);
    System.out.println("Employee belongs to the " + dept + " Department");
  }
}
class Department {
  String deptName;
  int noOfemployees;
  Department(String name, int numberOfemployees) {
    this.deptName = name;
    this.noOfemployees = numberOfemployees;
  }
}
class University {
  String universityName;
  int noOfdepartments;
  University(String name, int departments) {
    this.universityName = name;
    this.noOfdepartments = departments;
  }
}
public class AggregationDemo {
  public static void main(String[] args) {
    Employee e1 = new Employee(101, "Rishi", "Engineering");
    Employee e2 = new Employee(167, "Rohan", "Management");
    Employee e3 = new Employee(125, "Sneha", "Accounts");
  }
}

Output:
Employee name is Rishi
Employee Id is 101
Employee belongs to the Engineering Department

Employee name is Rohan
Employee Id is 167
Employee belongs to the Management Department

Employee name is Sneha
Employee Id is 125
Employee belongs to the Accounts Department