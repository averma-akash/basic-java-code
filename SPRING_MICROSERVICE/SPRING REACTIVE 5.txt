What is Reactive Programming?

Reactive Programming is a programming language with asynchronous data stream.Once an event will raise it will react with responsive and non-blocking manner that’s why it named it as reactive programming.
In a Reactive Programming context, “Everything is a Stream and acts in a non-blocking manner when there is data in the stream.”
This Reactive programming in java is introduced by Netflix organization with API (Rx-Java)


Why we need Reactive Programming?

There is four pillar to move towards Reactive Programming
Responsive : Responsive means if we are raising any events on stream it will return response in fraction of time as message processing in highly concurrent environments

Resilient : Resilient means Application should be responsive at the time of failure Normally we are integrating multiple modules and each are depend to each other assume one module is failing so it should not be impact all, it should be propagate.

Elastic : Elastic means our system should be handle N number of request, it should be well capability to load balance at any condition

Message Driven : Message Driven means asynchronous flow of execution, where we no need to wait for response after send request to server , once we send request it move to next business it shouldn’t depends on first one response , the first request response should be handle by callback mechanism


What is Rx-Java?
RxJava is a Java VM implementation of ReactiveX (Reactive Extensions): a library for composing asynchronous and event-based programs by using observable DP.
RxJava tries to be very lightweight. It is implemented as a single JAR that is focused on just the Observable abstraction and related higher-order functions
In simple word Rx-Java is an API which support us for reactive programming