******* What is Spring Boot? **********
Spring Boot is a Spring module which provides RAD (Rapid Application Development) feature to Spring framework.
It is used to create stand alone spring based application that you can just run because it needs very little spring configuration.

******* What are the advantages of Spring Boot? *******

Create stand-alone Spring applications that can be started using java -jar.
Embed Tomcat, Jetty or Undertow directly. You don't need to deploy WAR files.
It provides opinionated 'starter' POMs to simplify your Maven configuration.
It automatically configure Spring whenever possible.

******* What is the primary difference between Spring and Spring Boot? *******

Spring is a web application development framework based on Java. On the other hand Spring Boot is an extension of the spring framework which eliminated the boilerplate configuration required for setup a Spring application.

******* Explain different phases of RAD model. *******

Business Modeling: Based on the flow of information and distribution between various business channels, the product is designed.

Data Modeling : The information collected from business modeling is refined into a set of data objects that are significant for the business.

Application Generation: Automated tools are used for the construction of the software, to convert process and data models into prototypes.

******* What is DevTools in Spring Boot? *******

Spring Boot DevTools helps you to increase the productivity of the developer. So, you don’t require to redeploy your application every time you make the changes. It allows the developer to reload changes without the need of restarting of the server.

******* What is spring-boot-starter-parent? *******

It is a special starter which makes Gradle or Maven dependency-management easy by adding jars to your classpath.

********* Spring Actuator ***********

Spring Actuator is a cool feature of Spring Boot with the help of which you can see what is happening inside a running application.
Spring Actuator provides easy access to features such as identifying beans, CPU usage, etc. The Spring Actuator provides a very easy way to access the production-ready REST points and fetch all kinds of information from the web. These points are secured using Spring Security’

********* Auto Configuration *******

Auto-configuration is used to automatically configure the required configuration for the application. For example, if you have a data source bean present in the classpath of the application, then it automatically configures the JDBC template. With the help of auto-configuration, you can create a Java application in an easy way, as it automatically configures the required beans, controllers, etc. 

To disable the auto-configuration property, you have to exclude attribute of @EnableAutoConfiguration, in the scenario where you do not want it to be applied.

1
@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})
If the class is not on the classpath, then to exclude the auto-configuration, you have to mention the following code:

1
@EnableAutoConfiguration(excludeName={Sample.class})

********* Explain what is thymeleaf and how to use thymeleaf *********

Thymeleaf is a server-side Java template engine used for web applications. It aims to bring natural template for our web application and can integrate well with Spring Framework and HTML5 Java web applications. To use Thymeleaf, you need to add the following code in the pom.xml file:

<dependency>    
<groupId>org.springframework.boot</groupId>    
<artifactId>spring-boot-starter-thymeleaf</artifactId>    
</dependency>    